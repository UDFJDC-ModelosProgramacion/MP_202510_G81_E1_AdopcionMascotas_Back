{
	"info": {
		"_postman_id": "0d20ac7a-5e62-47e9-8deb-db6ac745c347",
		"name": "Owner-AdoptionTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42241202",
		"_collection_link": "https://adopcionmascotas.postman.co/workspace/Modelos~20799a28-f585-4809-a05b-57a15dc87fe6/collection/45430111-0d20ac7a-5e62-47e9-8deb-db6ac745c347?action=share&source=collection_link&creator=42241202"
	},
	"item": [
		{
			"name": "Agregar un test de adopción a un dueño",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"pm.globals.set(\"test_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Test contains owner reference\", function() {\r",
							"    pm.expect(data.owner.id).to.eql(pm.globals.get(\"owner_id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Test condition is valid\", function() {\r",
							"    pm.expect(data.petCondition).to.be.oneOf([\"STABLE\", \"URGENT_CARE\", \"CRITICAL\"]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Evaluación inicial de adaptación\",\r\n    \"testEnd\": \"2023-12-15T00:00:00Z\",\r\n    \"testObservations\": \"El animal muestra buen comportamiento\",\r\n    \"typeTest\": \"PASSED\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"owners",
						"{{owner_id}}",
						"adoptiontests"
					]
				}
			},
			"response": [
				{
					"name": "Agregar un test de adopción a un dueño",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Evaluación inicial de adaptación\",\r\n    \"testEnd\": \"2023-12-15T00:00:00Z\",\r\n    \"testObservations\": \"El animal muestra buen comportamiento\",\r\n    \"typeTest\": \"PASSED\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								"{{owner_id}}",
								"adoptiontests"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"id\": 1,\n    \"description\": \"Evaluación inicial de adaptación\",\n    \"testEnd\": \"2023-12-15T00:00:00Z\",\n    \"testObservations\": \"El animal muestra buen comportamiento\",\n    \"typeTest\": \"PASSED\",\n    \"owner\": {\n        \"id\": 1,\n        \"firstName\": \"Juan\",\n        \"lastName\": \"Pérez\"\n    }\n}"
				}
			]
		},
		{
			"name": "Agregar un test que no existe a un dueño",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Error message indicates test not found\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.include(\"not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"owners",
						"{{owner_id}}",
						"adoptiontests",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Agregar un test que no existe a un dueño",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								"{{owner_id}}",
								"adoptiontests",
								"0"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Obtener un test de adopción de un dueño",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test belongs to correct owner\", function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.owner.id).to.eql(pm.globals.get(\"owner_id\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests/{{adoptionTest_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"owners",
						"{{owner_id}}",
						"adoptiontests",
						"{{adoptionTest_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un test de adopción de un dueño",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests/{{test_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								"{{owner_id}}",
								"adoptiontests",
								"{{test_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"id\": 1,\n    \"description\": \"Evaluación inicial de adaptación\",\n    \"testEnd\": \"2023-12-15T00:00:00Z\",\n    \"testObservations\": \"El animal muestra buen comportamiento\",\n    \"typeTest\": \"PASSED\",\n    \"creationDate\": \"2023-11-16T10:00:00Z\"\n}"
				}
			]
		},
		{
			"name": "Obtener un test que no existe de un dueño",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"owners",
						"{{owner_id}}",
						"adoptiontests",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un test que no existe de un dueño",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								"{{owner_id}}",
								"adoptiontests",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"apierror\": {\n        \"status\": \"NOT_FOUND\",\n        \"timestamp\": \"2023-11-16T10:05:00Z\",\n        \"message\": \"Adoption test not found with id: 0\"\n    }\n}"
				}
			]
		},
		{
			"name": "Obtener todos los tests de adopción de un dueño",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns non-empty array\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.greaterThan(0);\r",
							"});\r",
							"\r",
							"pm.test(\"All tests belong to owner\", function() {\r",
							"    var tests = pm.response.json();\r",
							"    tests.forEach(test => {\r",
							"        pm.expect(test.owner.id).to.eql(pm.globals.get(\"owner_id\"));\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"owners",
						"{{owner_id}}",
						"adoptiontests"
					]
				}
			},
			"response": [
				{
					"name": "Obtener todos los tests de adopción de un dueño",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								"{{owner_id}}",
								"adoptiontests"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "[\n    {\n        \"id\": 1,\n        \"description\": \"Evaluación inicial de adaptación\",\n        \"testEnd\": \"2023-12-15\",\n        \"typeTest\": \"PASSED\"\n    },\n    {\n        \"id\": 2,\n        \"description\": \"Prueba de convivencia\",\n        \"testEnd\": \"2023-12-20\",\n        \"typeTest\": \"IN_PROGRESS\"\n    }\n]"
				}
			]
		},
		{
			"name": "Obtener un test no asociado a un dueño",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function() {\r",
							"    pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Error indicates non-associated test\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.include(\"not associated\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests/{{adoptionTest_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"owners",
						"{{owner_id}}",
						"adoptiontests",
						"{{adoptionTest_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un test no asociado a un dueño",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests/{{test_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								"{{owner_id}}",
								"adoptiontests",
								"{{test_id_2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"apierror\": {\n        \"status\": \"PRECONDITION_FAILED\",\n        \"timestamp\": \"21-02-2023 10:19:03\",\n        \"message\": \"The adoption test is not associated to the owner\"\n    }\n}"
				}
			]
		},
		{
			"name": "Asociar tests de adopción a un dueño (asociación masiva)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct number of tests\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(2); // Asumiendo 2 tests en el request\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": 1,\r\n        \"description\": \"Evaluación actualizada\",\r\n        \"typeTest\": \"COMPLETED\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"description\": \"Nueva evaluación\",\r\n        \"typeTest\": \"PENDING\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"owners",
						"{{owner_id}}",
						"adoptiontests"
					]
				}
			},
			"response": [
				{
					"name": "Asociar tests de adopción a un dueño (asociación masiva)",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": 1,\r\n        \"description\": \"Evaluación actualizada\",\r\n        \"typeTest\": \"COMPLETED\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"description\": \"Nueva evaluación\",\r\n        \"typeTest\": \"PENDING\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								"{{owner_id}}",
								"adoptiontests"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "[\n    {\n        \"id\": 1,\n        \"description\": \"Evaluación actualizada\",\n        \"typeTest\": \"COMPLETED\"\n    },\n    {\n        \"id\": 3,\n        \"description\": \"Nueva evaluación\",\n        \"typeTest\": \"PENDING\"\n    }\n]"
				}
			]
		},
		{
			"name": "Asociar tests que no existen a un dueño",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": 0,\r\n        \"description\": \"Evaluación inexistente\",\r\n        \"typeTest\": \"PENDING\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"owners",
						"{{owner_id}}",
						"adoptiontests"
					]
				}
			},
			"response": [
				{
					"name": "Asociar tests que no existen a un dueño",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": 0,\r\n        \"description\": \"Evaluación inexistente\",\r\n        \"typeTest\": \"PENDING\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								"{{owner_id}}",
								"adoptiontests"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"apierror\": {\n        \"status\": \"NOT_FOUND\",\n        \"timestamp\": \"21-02-2023 10:25:21\",\n        \"message\": \"The adoption test with the given id was not found\"\n    }\n}"
				}
			]
		},
		{
			"name": "Eliminar un test de adopción de un dueño",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function() {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests/{{adoptionTest_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"owners",
						"{{owner_id}}",
						"adoptiontests",
						"{{adoptionTest_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un test de adopción de un dueño",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests/{{test_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								"{{owner_id}}",
								"adoptiontests",
								"{{test_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "",
					"header": [],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": ""
				}
			]
		},
		{
			"name": "Eliminar un test de un dueño que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/owners/0/adoptiontests/{{adoptionTest_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"owners",
						"0",
						"adoptiontests",
						"{{adoptionTest_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un test de un dueño que no existe",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners/0/adoptiontests/{{test_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								"0",
								"adoptiontests",
								"{{test_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"apierror\": {\n        \"status\": \"NOT_FOUND\",\n        \"timestamp\": \"21-02-2023 10:05:19\",\n        \"message\": \"The owner with the given id was not found\"\n    }\n}"
				}
			]
		},
		{
			"name": "Eliminar un test que no existe de un dueño",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"owners",
						"{{owner_id}}",
						"adoptiontests",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un test que no existe de un dueño",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners/{{owner_id}}/adoptiontests/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								"{{owner_id}}",
								"adoptiontests",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"apierror\": {\n        \"status\": \"NOT_FOUND\",\n        \"timestamp\": \"21-02-2023 10:05:19\",\n        \"message\": \"The adoption test with the given id was not found\"\n    }\n}"
				}
			]
		}
	]
}