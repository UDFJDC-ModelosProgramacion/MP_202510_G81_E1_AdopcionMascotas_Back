{
	"info": {
		"_postman_id": "0f5817a7-6a58-494a-bf1f-efbdaceb89eb",
		"name": "Pets",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42241202",
		"_collection_link": "https://adopcionmascotas.postman.co/workspace/Modelos~20799a28-f585-4809-a05b-57a15dc87fe6/collection/45430111-0f5817a7-6a58-494a-bf1f-efbdaceb89eb?action=share&source=collection_link&creator=42241202"
	},
	"item": [
		{
			"name": "Create Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"\r",
							"pm.globals.set(\"pet_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"\r",
							"   pm.response.to.have.status(201);\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Max\",\r\n    \"birthDate\": \"2020-05-15\",\r\n    \"breed\": \"Golden Retriever\",\r\n    \"size\": \"MEDIUM\",\r\n    \"gender\": \"MALE\",\r\n    \"behaviorProfile\": \"Friendly with kids and other pets\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": [
				{
					"name": "Create Pet",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Max\",\r\n    \"birthDate\": \"2020-05-15\",\r\n    \"breed\": \"Golden Retriever\",\r\n    \"size\": \"MEDIUM\",\r\n    \"gender\": \"MALE\",\r\n    \"behaviorProfile\": \"Friendly with kids and other pets\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\r\n    \"id\": 1,\r\n    \"name\": \"Max\",\r\n    \"birthDate\": \"2020-05-15\",\r\n    \"breed\": \"Golden Retriever\",\r\n    \"size\": \"MEDIUM\",\r\n    \"gender\": \"MALE\",\r\n    \"behaviorProfile\": \"Friendly with kids and other pets\"\r\n}"
				}
			]
		},
		{
			"name": "Get all Pets",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pets"
					]
				}
			},
			"response": [
				{
					"name": "Get all Pets",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Max\",\n        \"birthDate\": \"2020-05-15\",\n        \"breed\": \"Golden Retriever\",\n        \"size\": \"MEDIUM\",\n        \"gender\": \"MALE\",\n        \"behaviorProfile\": \"Friendly with kids and other pets\",\n        \"owner\": {\n            \"id\": 1,\n            \"name\": \"John Doe\"\n        }\n    }\n]"
				}
			]
		},
		{
			"name": "get a one pet",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pets/{{pet_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": [
				{
					"name": "get a one pet",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets/{pet_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								"{pet_id}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\r\n    \"id\": 1,\r\n    \"name\": \"Max\",\r\n    \"birthDate\": \"2020-05-15\",\r\n    \"breed\": \"Golden Retriever\",\r\n    \"size\": \"MEDIUM\",\r\n    \"gender\": \"MALE\",\r\n    \"behaviorProfile\": \"Friendly with kids and other pets\"\r\n}"
				}
			]
		},
		{
			"name": "Obtener una mascota que no existe",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pet/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Obtener una mascota que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:17:39\",\r\n        \"message\": \"The pet with the given id was not found\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "Update pet",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Maximus\",\r\n    \"birthDate\": \"2020-05-15\",\r\n    \"breed\": \"Golden Retriever\",\r\n    \"size\": \"LARGE\",\r\n    \"gender\": \"MALE\",\r\n    \"behaviorProfile\": \"Very friendly with everyone\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pets/{{pet_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Update pet",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Maximus\",\r\n    \"birthDate\": \"2020-05-15\",\r\n    \"breed\": \"Golden Retriever\",\r\n    \"size\": \"LARGE\",\r\n    \"gender\": \"MALE\",\r\n    \"behaviorProfile\": \"Very friendly with everyone\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pets/{pet_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								"{pet_id}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Maximus\",\n    \"birthDate\": \"2020-05-15\",\n    \"breed\": \"Golden Retriever\",\n    \"size\": \"LARGE\",\n    \"gender\": \"MALE\",\n    \"behaviorProfile\": \"Very friendly with everyone\"\n}"
				}
			]
		},
		{
			"name": "Actualizar una mascota que no existe",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pets/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pets",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar una mascota que no existe",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"apierror\": {\n        \"status\": \"NOT_FOUND\",\n        \"timestamp\": \"21-02-2023 10:04:10\",\n        \"message\": \"The pet with the given id was not found\"\n    }\n}"
				}
			]
		},
		{
			"name": "Delete pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"\r",
							"   pm.response.to.have.status(204);\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pets/{{pet_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pets",
						"{{pet_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete pet",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets/{pet_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								"{pet_id}"
							]
						}
					},
					"status": "204 No Content",
					"_postman_previewlanguage": "",
					"header": [],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": ""
				}
			]
		},
		{
			"name": "Elliminar una mascota que no existe",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pets/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pets",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Elliminar una mascota que no existe",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"apierror\": {\n        \"status\": \"NOT_FOUND\",\n        \"timestamp\": \"21-02-2023 10:05:19\",\n        \"message\": \"The pet with the given id was not found\"\n    }\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "new_adoption_id",
			"value": "1",
			"type": "default"
		},
		{
			"key": "new_multimedia_id",
			"value": "1",
			"type": "default"
		},
		{
			"key": "new_multimedia_id_2",
			"value": "",
			"type": "default"
		},
		{
			"key": "new_medical_event_id_1",
			"value": "1",
			"type": "default"
		},
		{
			"key": "new_vet_id_1",
			"value": "",
			"type": "default"
		},
		{
			"key": "new_pet_id_1",
			"value": "",
			"type": "default"
		},
		{
			"key": "new_medical_event_id_2",
			"value": "2",
			"type": "default"
		},
		{
			"key": "new_vet_id_2",
			"value": "",
			"type": "default"
		},
		{
			"key": "new_pet_id_2",
			"value": "2",
			"type": "default"
		}
	]
}