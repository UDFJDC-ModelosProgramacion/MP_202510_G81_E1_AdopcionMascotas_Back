{
	"info": {
		"_postman_id": "169f48a0-2c14-427f-b1b1-0d085cee7904",
		"name": "Vaccines",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42241202",
		"_collection_link": "https://adopcionmascotas.postman.co/workspace/Modelos~20799a28-f585-4809-a05b-57a15dc87fe6/collection/45430111-169f48a0-2c14-427f-b1b1-0d085cee7904?action=share&source=collection_link&creator=42241202"
	},
	"item": [
		{
			"name": "create vaccines",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"\r",
							"pm.globals.set(\"vaccines_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"\r",
							"   pm.response.to.have.status(201);\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Rabia\",\r\n    \"brandName\": \"Pfizer\",\r\n    \"nextDate\": \"2025-06-01T00:00:00-05:00\",\r\n    \"dosis\": 1.0,\r\n    \"vaccineCard\":{\r\n        \"id\":1\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/vaccines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vaccines"
					]
				}
			},
			"response": [
				{
					"name": "create vaccines",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Rabia\",\r\n    \"brandName\": \"Pfizer\",\r\n    \"nextDate\": \"2025-06-01T00:00:00-05:00\",\r\n    \"dosis\": 1.0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vaccines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vaccines"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Rabia\",\n    \"brandName\": \"Pfizer\",\n    \"nextDate\": \"2025-06-01T00:00:00-05:00\",\n    \"dosis\": 1\n}"
				}
			]
		},
		{
			"name": "get all vaccines",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of vaccines > ' + 0, function () {\r",
							"\r",
							"   var data = pm.response.json()\r",
							"\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"\r",
							"   pm.response.to.have.status(200);\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/vaccines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vaccines"
					]
				}
			},
			"response": [
				{
					"name": "get all vaccines",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vaccines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vaccines"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "[\n    {\n    \"id\": 1,\n    \"name\": \"Rabia\",\n    \"brandName\": \"Pfizer\",\n    \"nextDate\": \"2025-06-01T00:00:00-05:00\",\n    \"dosis\": 1,\n    \"vaccineCards\": []\n    }\n]"
				}
			]
		},
		{
			"name": "get a vaccine",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\r",
							"   pm.response.to.have.status(200);\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/vaccines/{{vaccines_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vaccines",
						"{{vaccines_id}}"
					]
				}
			},
			"response": [
				{
					"name": "get a vaccine",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vaccines/{{vaccines_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vaccines",
								"{{vaccines_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Rabia\",\n    \"brandName\": \"Pfizer\",\n    \"nextDate\": \"2025-06-01T00:00:00-05:00\",\n    \"dosis\": 1,\n    \"vaccineCards\": []\n}"
				}
			]
		},
		{
			"name": "get a vaccine that does not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"\r",
							"   pm.response.to.have.status(404);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"\r",
							"   var data = pm.response.json();\r",
							"\r",
							"   pm.expect(data.apierror.message).to.contains(\"Vaccine not found with ID:\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/vaccines/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vaccines",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "get a vaccine that does not exist",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vaccines/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vaccines",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"apierror\": {\n        \"status\": \"NOT_FOUND\",\n        \"timestamp\": \"22-05-2025 10:01:09\",\n        \"message\": \"The vaccine with the given id was not found\"\n    }\n}"
				}
			]
		},
		{
			"name": "update a vaccine",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\r",
							"   pm.response.to.have.status(200);\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Rabia\",\r\n    \"brandName\": \"Pfizer\",\r\n    \"nextDate\": \"2025-06-01T00:00:00-05:00\",\r\n    \"dosis\": 1.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/vaccines/{{vaccines_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vaccines",
						"{{vaccines_id}}"
					]
				}
			},
			"response": [
				{
					"name": "update a vaccine",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Rabia\",\r\n    \"brandName\": \"Pfizer\",\r\n    \"nextDate\": \"2025-06-01T00:00:00-05:00\",\r\n    \"dosis\": 1.0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vaccines/{{vaccines_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vaccines",
								"{{vaccines_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\r\n    \"id\": 1,\r\n    \"name\": \"Rabia\",\r\n    \"brandName\": \"Pfizer\",\r\n    \"nextDate\": \"2025-06-01T00:00:00-05:00\",\r\n    \"dosis\": 1.0\r\n}"
				}
			]
		},
		{
			"name": "update a vaccine that does not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"\r",
							"   pm.response.to.have.status(404);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"\r",
							"   var data = pm.response.json();\r",
							"\r",
							"   pm.expect(data.apierror.message).to.contains(\"Vaccine not found with ID:\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Rabia\",\r\n    \"brandName\": \"Pfizer\",\r\n    \"nextDate\": \"2025-06-01T00:00:00-05:00\",\r\n    \"dosis\": 1.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/vaccines/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vaccines",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "update a vaccine that does not exist",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Rabia\",\r\n    \"brandName\": \"Pfizer\",\r\n    \"nextDate\": \"2025-06-01T00:00:00-05:00\",\r\n    \"dosis\": 1.0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vaccines/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vaccines",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"22-05-2025 10:01:09\",\r\n        \"message\": \"The vaccine with the given id was not found\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "delete a vaccine",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"\r",
							"   pm.response.to.have.status(204);\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/vaccines/{{vaccines_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vaccines",
						"{{vaccines_id}}"
					]
				}
			},
			"response": [
				{
					"name": "delete a vaccine",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vaccines/{{vaccines_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vaccines",
								"{{vaccines_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "",
					"header": [],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": ""
				}
			]
		},
		{
			"name": "delete a vaccine that does not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"\r",
							"   pm.response.to.have.status(404);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"\r",
							"   var data = pm.response.json();\r",
							"\r",
							"   pm.expect(data.apierror.message).to.contains(\"Vaccine not found with ID:\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/vaccines/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vaccines",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "delete a vaccine that does not exist",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vaccines/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vaccines",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"apierror\": {\n        \"status\": \"NOT_FOUND\",\n        \"timestamp\": \"22-05-2025 10:01:09\",\n        \"message\": \"The vaccine with the given id was not found\"\n    }\n}"
				}
			]
		}
	]
}